import streamlit as st
import json
import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import altair as alt

st.set_page_config(page_title="–û–±–∑–æ—Ä", page_icon="üìà")

st.markdown("# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π *–∞–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö* –ø–æ –≥–æ—Ä–æ–¥–∞–º –†–æ—Å—Å–∏–∏")

# Function to extract data fron .json file
def extract_json_file(file_name):
    f = open(file_name, mode='r', encoding='utf8')
    return json.loads('[' + f.read() + ']')

# Extracting data
data = extract_json_file(os.path.dirname(__file__) + '/vacancies_data.json')
df_data = pd.DataFrame(data)
area_jobs = df_data['area-name'].value_counts()

# Adding interactive filter
num_of_cities_option = st.sidebar.selectbox(
                    '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', 
                    ('–¢–æ–ø 5', '–¢–æ–ø 10', '–¢–æ–ø 20', '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ'))
num_of_cities_dict = {
    '–¢–æ–ø 5' : 5,
    '–¢–æ–ø 10' : 10,
    '–¢–æ–ø 20' : 20,
    '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ' : area_jobs.count(),
}
# Constructing plot
# Add 'Others' category to a plot for numeric num_of_cities_option
if (num_of_cities_option != '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ'):
    others = pd.Series(
        area_jobs[num_of_cities_dict[num_of_cities_option]:].values.sum(),
        index = ['–î—Ä—É–≥–∏–µ'])
    area_jobs = pd.concat([area_jobs[:num_of_cities_dict[num_of_cities_option]],
                                 others])

# –ù–∞—á–∞–ª –ø–µ—Ä–µ—Ö–æ–¥ —Å matplotlib –Ω–∞ altair. –î–∞–Ω–Ω—ã–µ - Series. –ù–µ–æ–±—Ö–æ–¥–∏–º dataframe?
barchart = alt.Chart(area_jobs).mark_bar(
                                        ).encode(x = alt.X('index:O', sort=None),
                                                 y = alt.Y('values:Q')
                                                    )
# –î–æ–±–∞–≤–∏–º –ø–æ–¥–ø–∏—Å–∏ —Å—Ç–æ–ª–±—Ü–∞–º
text_for_barchart = barchart.mark_text(
    align='center',
    baseline='middle',
    dy=-10  # Nudges text to right so it doesn't appear on top of the bar
).encode(
    text='values:Q')

st.write("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –≥–æ—Ä–æ–¥–∞–º –†–æ—Å—Å–∏–∏")
st.altair_chart(barchart + text_for_barchart, use_container_width = True)

# fig, ax = plt.subplots(figsize=(15,5))
# hist1 = ax.bar(area_jobs.index, area_jobs.values)
# ax.tick_params(axis='x', rotation=90, labelsize=12)
# ax.tick_params(axis='y', labelsize=12)
# ax.set_xlabel('City', fontsize=14)
# ax.set_ylabel('Vacancies number', fontsize=13)
# ax.bar_label(hist1)

# st.pyplot(fig)